ID,title,description
RMLTC0000-JSON,"one table, one column, zero rows",Tests if an empty table produces an empty RDF graph
RMLTC0001a-JSON,"One column mapping, subject URI generation by using rml:template",Tests: (1) one column mapping; (2) subject URI generation by using rml:template; (3) one column to one property
RMLTC0001b-JSON,"One column mapping, generation of a BlankNode subject by using rml:termType",Tests: (1) one column mapping; (2) generation of a BlankNode subject by using rml:termType; (3) one column to one property
RMLTC0002a-JSON,"Two columns mapping, generation of a subject URI by the concatenation of two column values","Tests: (1) two column mapping, no primary key; (2) subject URI generated by the concatenation of two column values; (3) one column to one property"
RMLTC0002b-JSON,"Two columns mapping, generation of a BlankNode subject by using rml:template and rml:termType","Tests: (1) two column mapping, no primary key; (2) generation of a BlankNode subject by using rml:template; (3) one column to one property"
RMLTC0002e-JSON,"Two columns mapping, an undefined rml:path",Tests the presence of an undefined rml:path
RMLTC0002g-JSON,"Two columns mapping, invalid JSONPath",Test the presence of an invalid JSONPath
RMLTC0003c-JSON,"Three columns mapping, by using a rml:template to produce literal",Tests: (1) three column mapping; and (2) the use of rml:template to produce literal
RMLTC0004a-JSON,"Two column mapping, from one row table to two different triples","Tests: (1) two column mapping, (2) subject URI generated by a column value; (3) from one row table to two different triples (4) typing by using rml:class"
RMLTC0004b-JSON,"One column mapping, presence of rml:termType rml:Literal on rml:subjectMap","Tests: (1) one column mapping (2) the presence of rml:termType rml:Literal on rml:subjectMap, which is invalid"
RMLTC0005a-JSON,Typing of resources,Tests the typing of resources
RMLTC0006a-JSON,"Use of rml:constant in rml:subjectMap, rml:predicateMap, rml:objectMap and rml:graphMap","Tests the use of rml:constant in rml:subjectMap, rml:predicateMap, rml:objectMap and rml:graphMap"
RMLTC0007a-JSON,Typing resources by relying on rdf:type predicate,Tests the typing resources by relying on rdf:type predicate
RMLTC0007b-JSON,Assigning triples to Named Graphs,Tests the generation of triples to a named graph
RMLTC0007c-JSON,"One row mapping, using rml:class","Tests subjectmap with more than one class IRIs, rml:class"
RMLTC0007d-JSON,"One column mapping, specifying an rml:predicateObjectMap with rdf:type","Tests subjectmap with an alternative of having rml:class, i.e., by specifying an rml:predicateObjectMap with predicate rdf:type"
RMLTC0007e-JSON,"One column mapping, using rml:graphMap and rml:class",Tests subjectmap with rml:graphMap and rml:class
RMLTC0007f-JSON,"One column mapping, using rml:graphMap and specifying an rml:predicateObjectMap with rdf:type",Tests subjectmap with rml:graphMap and specifying an rml:predicateObjectMap with predicate rdf:type
RMLTC0007g-JSON,Assigning triples to the default graph,Tests the generation of triples to the default graph
RMLTC0007h-JSON,Assigning triples to a non-IRI named graph,"Tests the generation of triples to a non-IRI named graph, which is an error"
RMLTC0008a-JSON,Generation of triples to a target graph by using rml:graphMap and rml:template,Test that results of the mapping can be directed to a target graph by using rml:graphMap and rml:template
RMLTC0008b-JSON,Generation of triples referencing object map,Tests the mapping specification referencing object map without join
RMLTC0008c-JSON,Generation of triples by using multiple predicateMaps within a rml:predicateObjectMap,Tests the generation of triples by using multiple predicateMaps within a rml:predicateObjectMap
RMLTC0009a-JSON,Generation of triples from foreign key relations,Test foreign key relationships among logical tables
RMLTC0009b-JSON,Generation of triples to multiple graphs,Test that results from distinct parts of the mapping can be directed to different target graphs.
RMLTC0010a-JSON,Template with table column with blank space,Tests a template with blank space in column value
RMLTC0010b-JSON,Template with table columns with special chars,Tests a template with special chars in column value
RMLTC0010c-JSON,Template with table columns with special chars and backslashes,Tests a template with special chars in reference value and backslash escapes in string templates
RMLTC0011b-JSON,"M to M relation, by using an additional Triples Map","Tests, M to M relations, by using an additional Triples Map"
RMLTC0012a-JSON,Blank node referencing multiple columns,Tests that blank nodes can be generated by referencing multiple columns
RMLTC0012b-JSON,Duplicate tuples generate same blank node,Tests that blank nodes with same identifier and in the same graph but generated by different logical rows are considered equivalent.
RMLTC0012c-JSON,TriplesMap without subjectMap,"Tests a RML with missing information, TriplesMap without subjectMap."
RMLTC0012d-JSON,TriplesMap with two subjectMap,"Tests a RML with wrong information, TriplesMap with two subjectMap."
RMLTC0013a-JSON,Null value in JSON file,Tests if null values in JSON files are handled correctly.
RMLTC0015a-JSON,Generation of language tags from a table with language information,Generation of language tags from a table with language information
RMLTC0015b-JSON,"Generation of language tags from a table with language information, and a term map with invalid rml:language value","Tests a term map with an invalid rml:language value, which is an error"
RMLTC0019a-JSON,Generation of triples by using IRI value in columns,Test the generation of triples by using IRI value in attributes
RMLTC0019b-JSON,"Generation of triples by using IRI value in columns, with data error","Test the generation of triples by using IRI value in attributes, conforming RML mapping with data error (and limited results)"
RMLTC0020a-JSON,Generation of triples by using IRI value in columns,Test the generation of triples by using IRI value in attributes
RMLTC0021a-JSON,Generation of triples referencing object map,Tests the mapping specification referencing object map with same logical source and join condition
RMLTC0022a-JSON,Generating of triples with constant datatype,Test triples with a fixed constant datatype
RMLTC0022b-JSON,Generating of triples with datatypeMap,Test triples with a XSD datatype generated from the data
RMLTC0022c-JSON,Generating of triples with datatypeMap with custom datatype,Test triples with a custom datype from the data
RMLTC0023a-JSON,Invalid IRI template 1,Test handling of invalid IRI template
RMLTC0023b-JSON,Invalid IRI template 2,Test handling of invalid IRI template
RMLTC0023c-JSON,Invalid IRI template 3,Test handling of invalid IRI template
RMLTC0023d-JSON,Invalid IRI template 4,Test handling of invalid IRI template
RMLTC0023e-JSON,Invalid IRI template 5,Test handling of invalid IRI template
RMLTC0023f-JSON,Valid IRI template with backslash-escape,Test handling of a valid IRI template using backslash-escape
RMLTC0024a-JSON,Usage of constant term maps in combination with explicitly defined term types,Tests the usage of constant term maps in combination with explicitly defined term types
RMLTC0025a-JSON,Generation of triples from arrays,Tests the generation of triples from array input data structures
RMLTC0025b-JSON,Generation of triples from arrays with wrong reference,Tests the generation of triples from array input data structures. Test should fail as reference points to the array and not the values of the array
RMLTC0025c-JSON,Generation of triples from arrays in subject and object,Tests the generation of triples from array input data structures in subject and object
RMLTC0026a-JSON,"Two triples maps, one with rml:baseIRI and one without and generating absolute IRIs",Tests the generation of triples from relative IRIs using base IRI
RMLTC0026b-JSON,"Two triples maps, one with rml:baseIRI one one without and generating relative IRIs using baseIRI parameter",Tests the generation of triples from relative IRI using base IRI parameter
RMLTC0026c-JSON,"Two triples maps, both with rml:baseIRI defined","Tests the generation of triples using relative IRIs with base IRIs defined only in triples maps, without base IRI parameter"
RMLTC0026d-JSON,"Two triples maps,both with rml:bseIRI defined and baseIRI parameter defined",Tests the generation of triples by with base IRIs different than the base IRI parameter
RMLTC0027a-JSON,Generation of triples using the URI term type,Tests the generation of triples with a URI term type in the subject or object
RMLTC0027b-JSON,Generation of triples using the UnsafeURI term type,Tests the generation of triples with a UnsafeURI term type in the subject or object
RMLTC0027c-JSON,Generation of triples using the UnsafeIRI term type,Tests the generation of triples with a UnsafeIRI term type in the subject or object
RMLTC0028a-JSON,Generation of the right datatype for a constant in the mapping,Test the honoring of the datatype specified by the constant term in the mapping
RMLTC0028b-JSON,Generation of all named graphs when rml:defaultGraph is involved,Test if the default graph is also generated correctly.
RMLTC0028c-JSON,Generation of the right language tag for a constant in the mapping,Test the honoring of the language tag specified by the constant term in the mapping
